---
# Dynamic generation of VO data from EGI API
- name: Generate VO data
  local_action: command {{ role_path }}/scripts/generates_yaml_vo_data.sh
  
# VO data reading, a bit complex with three operations
# Can likely be simplified.
- name: Read vo data files in vars
  include_vars:
    file: 'generated_vars/vo/params/{{ item }}.yml'
  loop: "{{ gridsite_supported_vos }}"
  register: _supported_vos_data

# Next step
- name: Combine configs into one dict
  set_fact:
    _supported_vos_data_dict: "{{ dict(_supported_vos_data.results | json_query('[].[item, ansible_facts]')) }}"

# Next step
- name: Combine configs into one list
  set_fact:
    _supported_vos_data_list: "{{ _supported_vos_data_dict | dict2items | map(attribute='value') }}"

# Final step: combining with our local data
- name: Combine with local parameters
  set_fact:
    gridsite_supported_vos_data_list: "{{ _supported_vos_data_list | community.general.lists_mergeby(gridsite_supported_vo_params, 'name') }}"

# FIXME: I don't yet understand how voms-cms-auth.cern.ch is *not* 
# part of operations-portal.egi.eu API return request, but anyway used!

# Fix CMS VO voms servers list
- name: Fix CMS VO voms servers list
  set_fact:
    gridsite_supported_vos_data_list: "{{ gridsite_supported_vos_data_list | community.general.lists_mergeby(_addendum, 'name',list_merge='append') }}"

